<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
<%= render 'layouts/header' %>

<div class="flexslider">
  <ul class="slides">
    <li>
      <%= image_tag @room.cover.url %>
    </li>
    <% @uploads.each do |upload| %>
    <li>
      <%= image_tag upload.image.url %>
    </li>
    <% end %>
  </ul>
</div>

<div class="container">
<div class="row">
  <div id="roomShow" class="col-md-8">
    <h1><%= @room.title %></h1>

    <p><%= link_to "#{@room.district}, #{@room.area.name}, #{@room.area.location.name}", "http://maps.google.com/?q=#{@room.location}", target: "_blank" %></p>
    
    <div class="desktop-visible">
    <hr>

      <strong>Description</strong>
      <p class="text-area">
        <%= @room.description %>
      </p>

      <hr>
      <strong>Amenities</strong>
      <table>
        <tbody>
          <tr>
            <td>
              <% if @room.free_wifi == true %>
                <span class="glyphicon glyphicon-ok">
              <% else %>
                <span class="glyphicon glyphicon-remove">
              <% end %></span>Free Wifi
            </td>
            <td>
              <% if @room.restaurant == true %>
                <span class="glyphicon glyphicon-ok">
              <% else %>
                <span class="glyphicon glyphicon-remove">
              <% end %></span>Restaurant
            </td>
            <td>
              <% if @room.free_parking == true %>
                <span class="glyphicon glyphicon-ok">
              <% else %>
                <span class="glyphicon glyphicon-remove">
              <% end %></span>Free Parking
            </td>
            <td>
              <% if @room.bar == true %>
                <span class="glyphicon glyphicon-ok">
              <% else %>
                <span class="glyphicon glyphicon-remove">
              <% end %></span>Bar
            </td>
          </tr>
         
        </tbody>
      </table>
      <br>
      <br>
      <div id="map" class="map-container"></div>
    </div>

  </div>
  <div class="col-md-4">
    <div class="pricing">
      <table>
        <tbody>
          <tr>
            <td><%= @room.area.location.currency_symbol %> <span id="grandSlam"><%= @room.room_rates(params[:duration]) %></span></td>
            <td class="text-right"><span class="price-per">For <span id="duration_show"><%= params[:duration] %></span> hours</span></td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="booking-wrapper">
      <%= form_tag book_rooms_path(id: @room), method: :post do %>      
      <div class="row">
        <div class="col-xs-6 padRight-5">
          <label>Start date</label>
          <%= text_field_tag :date, params[:date], placeholder: "Select Date", value: params[:start_date], id: "date_select", class: "form-input marBot-15 noBor datepicker1" %>
        </div>
        <div class="col-xs-6 padLeft-5">
          <label>Duration</label>
          <%= select_tag :hour, options_for_select(Area::DURATION_SELECT, params[:duration]), include_blank: false, id: "duration_select", class: "form-input marBot-15 noBor select-fix" %>
        </div>
      </div>
      <div class="row">
        <div class="col-xs-6 padRight-5">
          <label>Check in</label>
          <%= select_tag :check_in, options_for_select(Hash[@timeslot_select.zip(@timeslots)], disabled: @result), prompt: "Select time", id:"time_select", class: "form-input marBot-15 noBor select-fix" %>
        </div>
        <div class="col-xs-6 padLeft-5">
          <label>Guests</label>
          <%= select_tag :guest, options_for_select((1..5).step(1).to_a.map{|s| ["#{s}", s]}, 2), id: "guest", class: "form-input marBot-15 noBor select-fix" %>
        </div>
      </div>
      <div id="extra_person">0</div>
      
      <div id="subtotal"><%= @room.room_rates(params[:duration]) %></div>

      <%= hidden_field_tag :grand_total, @room.room_rates(params[:duration]), id: "grand_total" %>
      
        <% if user_signed_in? %>
          <%= button_tag "Book this room", data: {disable_with: "PLEASE WAIT..."}, class: "btn btn-lg btn-danger full-width" %>
        <% else %>
        <div class="form-group">
          <%= button_tag "Book this room", disabled: true, class: "btn btn-lg btn-danger full-width" %>
        </div>
          <%= image_tag 'lock.png', class: "icon-sm" %> <small>Only signed in members can book rooms.</small>
        <% end %>

    <% end %>
    </div>
  </div>
</div>

<%= render 'rooms/tabs' %>

</div>

<script>
  $(document).ready(function() {
    $('#date_select, #duration_select').change(function() {
      $.ajax({
        url: "<%= update_timeslots_path %>",
        data: {
          start_date : $('#date_select').val(),
          duration : $('#duration_select').val(),
          id : <%= @room.id %>
        },
        dataType: "script"
      });
    });
  });
</script>


<script>
  $('#duration_select').on('change',function(){
    var extra_hour = this.value - 3;
    var tot = (extra_hour * gon.price_per_extra_hour) + <%= @room.price_per_three_hour_sens %>;
    var service = tot * 0.2;
    var grandTotal = (tot + service) * 0.01;
    $('#duration_show').html(this.value);
    $('#subtotal').html(grandTotal.toFixed(2));
    updateTotal();
  });
  $('#guest').on('change',function(){
    var guest = this.value;
    var extra_guest = guest - 2;
    if (guest > 2) {
      var extra_charge = 0.01 * extra_guest * <%= @room.price_per_extra_guest_sens %>;
      $('#extra_person').html(extra_charge);
      updateTotal();
    } else {
      var extra_charge = 0;
      $('#extra_person').html(extra_charge);
      updateTotal();
    }
  });
  var updateTotal = function () {
    var input1 = parseFloat($('#subtotal').text());
    var input2 = parseFloat($('#extra_person').text());
    if (isNaN(input1) || isNaN(input2)) {
        if(!input2){
          $('#grandSlam').html($('#subtotal').text());
          $('#grand_total').val($('#subtotal').text());
        }      
        if(!input1){
          $('#grandSlam').html($('#extra_person').text());
          $('#grand_total').val($('#extra_person').text());
        }        
    } else {          
      $('#grandSlam').html((input1 + input2).toFixed(2));
      $('#grand_total').val((input1 + input2).toFixed(2));
    }
  };
  var total = input1 + input2;
  $('#grandSlam').html(total);
  $('#grand_total').val(total);
</script>  

<script>
  $(document).ready(function () {
    $('.flexslider').flexslider({
      prevText: "",
      nextText: "",
      animation: "slide",
      slideshow: true,
      slideshowSpeed: 4500,
      touch: true
    });
  });
</script>

<script>
  $(document).ready(function(){
    $('.datepicker1').datepicker({
      format: 'yyyy-mm-dd',
      startDate: "+0d",
      endDate: "+90d",
      orientation: "left bottom",
      /* datesDisabled: ["2015-11-07","2015-11-10"], */
      /* daysOfWeekDisabled: "06", */
      /* daysOfWeekDisabled: "12345", */
      weekStart: "1",
      autoclose: true,
      /* datesDisabled: gon.unavailable_dates */
    });
  });
</script>

<script>
  $(document).ready(function () {
  /**
   * Draw points and radius (in kilometer) in map.
   */
  var points = [
      {
          point: new google.maps.LatLng(gon.latitude, gon.longitude),
          //add radius/color attribute to set custom radius/color
          //radius: 2,
          //color '#CCCCCC',
      }
  ];

  var zoom = 15;
  var DEFAULT_COLOR = '#428bca';
  var DEFAULT_RADIUS = 0.1; //Kilometers
  var map;
  var elevator;
  var mapOptions = {
      zoom: zoom,
      navigationControl: false, 
      streetViewControl: false,
      mapTypeControl: false,
      center: points[0].point,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
  };
  map = new google.maps.Map($('#map')[0], mapOptions);
  for (var i = 0; i < points.length; i++){
      var point = points[i];
      var marker = new google.maps.Marker({
          map: map,
          position: point.point,
          title: i.toString()
      });
      var circle = new google.maps.Circle({
          map: map,
          fillOpacity: 0.4,
          strokeColor: "#428bca",
          radius: (point.radius !== undefined ? point.radius : DEFAULT_RADIUS) * 1000,    // metres
          fillColor: (point.color !== undefined ? point.color : DEFAULT_COLOR)
      });
      circle.bindTo('center', marker, 'position');
  }
  marker.setMap(null);
  });
</script>

